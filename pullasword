local DiscordLib = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt")()

local win = DiscordLib:Window("discord library")
local serv = win:Server("Menu", "")
local tgls = serv:Channel("Player")
tgls:Toggle("Auto Swing Toogle",false, function(swing)
      if swing then
         -- Start the loop
         _G.loopswing = true
			while _G.loopswing do
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("OnFightAttributeChange"):FireServer("AutoTrain",true)
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("SettingEventRS"):FireServer("AutoTrainer",true)
				task.wait() -- Adjust the wait time as needed
			end
      else
         -- Stop the loop
         _G.loopswing = false
      end
		print(swing)
	end)
tgls:Toggle("Auto World Boss Toogle",false, function(wboss)
      if wboss then
         -- Start the loop
         _G.loopwboss = true
			while _G.loopwboss do
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("StartAutoFight"):FireServer()
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("StartAutoFight"):FireServer("MegaBoss","Dragon8","Hard")
				
				task.wait() -- Adjust the wait time as needed
			end
      else
         -- Stop the loop
         _G.loopwboss = false
      end
		print(wboss)
	end)
tgls:Toggle("Auto Buy Potion",false, function(potion)
      if potion then
         -- Start the loop
         _G.looppotion = true
			while _G.looppotion do
				local args = {"Buy",2,1}
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("OnStandartShopRequest"):FireServer(unpack(args))
                local args = {"Buy",2,2}
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("OnStandartShopRequest"):FireServer(unpack(args))
                local args = {"Buy",2,3}
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("OnStandartShopRequest"):FireServer(unpack(args))
                local args = {"Buy",2,4}
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("OnStandartShopRequest"):FireServer(unpack(args))
				task.wait() -- Adjust the wait time as needed
			end
      else
         -- Stop the loop
         _G.looppotion = false
      end
		print(potion)
	end)
tgls:Toggle("Auto Claim Spin",false, function(spin)
      if spin then
         -- Start the loop
         _G.loopspin = true
			while _G.loopspin do 
				game:GetService("ReplicatedStorage"):WaitForChild("GameClient"):WaitForChild("Events"):WaitForChild("RemoteEvent"):WaitForChild("SpaceEggEvent"):FireServer()
	            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("GetCreditsEvent"):FireServer()
				task.wait() -- Adjust the wait time as needed
			end
      else
         -- Stop the loop
         _G.loopspin = false
      end
		print(spin)
	end)	
local tgls = serv:Channel("Rebirth") 
tgls:Toggle("Auto Swing",false, function(swing1)
      if swing1 then
         -- Start the loop
         _G.loopswing1 = true
			while _G.loopswing1 do
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("ClickEvent"):FireServer()
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("Dungeon"):WaitForChild("OnDungeonClick"):FireServer()
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("ClickEvent"):FireServer()
				task.wait() -- Adjust the wait time as needed
			end
      else
         -- Stop the loop
         _G.loopswing1 = false
      end
		print(swing1)
	end)
tgls:Toggle("Auto Rebirth",false, function(rebirth)
      if rebirth then
         -- Start the loop
         _G.looprebirth = true
			while _G.looprebirth do
				game:GetService("ReplicatedStorage"):WaitForChild("GameClient"):WaitForChild("Events"):WaitForChild("RemoteEvent"):WaitForChild("RebirthEvent"):FireServer()
                game:GetService("ReplicatedStorage"):WaitForChild("GameClient"):WaitForChild("Events"):WaitForChild("RemoteEvent"):WaitForChild("SuperRebirthEvent"):FireServer()
				task.wait() -- Adjust the wait time as needed
			end
      else
         -- Stop the loop
         _G.looprebirth = false
      end
		print(rebirth)
	end)

local serv = win:Server("World Boss", "")
local tgls = serv:Channel("Brick Kong")
tgls:Toggle("Normal",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop1 = true
         while _G.loop1 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("WinMegaBossEvent"):FireServer("Dragon8","Normal")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait(0.1) 
         end
      else
         _G.loop1 = false
      end
print(CurrentValue)
end)
tgls:Toggle("Hard",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop2 = true
         while _G.loop2 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("WinMegaBossEvent"):FireServer("Dragon8","Hard")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait() 
         end
      else
         _G.loop2 = false
      end
print(CurrentValue)
end)
tgls:Toggle("Chaos",false, function(Chaos)
      if Chaos then
         -- Start the loop
         _G.Chaos1 = true
         while _G.Chaos1 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("EventFolder"):WaitForChild("WinBossEvent"):FireServer("Dragon-151","Normal")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("WinMegaBossEvent"):FireServer("Dragon8","Chaos")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait() 
         end
      else
         _G.Chaos1 = false
      end
print(Chaos)
end)

local tgls = serv:Channel("Hydra")
tgls:Toggle("Normal",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop4 = true
         while _G.loop4 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("WinMegaBossEvent"):FireServer("Dragon9","Normal")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait(0.1) 
         end
      else
         _G.loop4 = false
      end
print(CurrentValue)
end)
tgls:Toggle("Hard",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop5 = true
         while _G.loop5 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("WinMegaBossEvent"):FireServer("Dragon9","Hard")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait(0.1) 
         end
      else
         _G.loop5 = false
      end
print(CurrentValue)
end)
tgls:Toggle("Chaos",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop6 = true
         while _G.loop6 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("WinMegaBossEvent"):FireServer("Dragon9","Chaos")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait(0.1) 
         end
      else
         _G.loop6 = false
      end
print(CurrentValue)
end)
local tgls = serv:Channel("Boss Stage")
tgls:Toggle("Vortex",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop7 = true
         while _G.loop7 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("WinBossEvent"):FireServer("Boss8")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait(0.1) 
         end
      else
         _G.loop7 = false
      end
print(CurrentValue)
end)
local serv = win:Server("Event Battle", "")
local tgls = serv:Channel("Event Boss")
tgls:Toggle("Magma dragon",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop8 = true
         while _G.loop8 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("EventFolder"):WaitForChild("WinBossEvent"):FireServer("Dragon-151","Normal")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait() 
         end
      else
         _G.loop8 = false
      end
print(CurrentValue)
end)
tgls:Toggle("Dark Prince",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop9 = true
         while _G.loop9 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("EventFolder"):WaitForChild("WinBossEvent"):FireServer("Boss-150")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait(5) 
         end
      else
         _G.loop9 = false
      end
print(CurrentValue)
end)
tgls:Toggle("Demon Lord",false, function(CurrentValue)
      if CurrentValue then
         -- Start the loop
         _G.loop0 = true
         while _G.loop0 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(1)
game:GetService("ReplicatedStorage"):WaitForChild("EventFolder"):WaitForChild("WinBossEvent"):FireServer("Boss-151")
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("RemoveC"):FireServer(0)
task.wait(5) 
         end
      else
         _G.loop0 = false
      end
print(CurrentValue)
end)	
local btns = serv:Channel("Other")
btns:Seperator()
btns:Button("Anti AFK", function()
local VirtualUser = game:GetService('VirtualUser')
game:GetService('Players').LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Anti AFK loaded!",
    Text = "Made by Tuuguu936",
    Button1 = "Okay",
    Duration = 5
})end)
local tgls = serv:Channel("Event") 
tgls:Toggle("Auto Swing",false, function(swingevent)
      if swingevent then
         -- Start the loop
         _G.loop1 = true
			while _G.loop1 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("ClickEvent"):FireServer()
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("Dungeon"):WaitForChild("OnDungeonClick"):FireServer()
task.wait() -- Adjust the wait time as needed
			end
      else
         -- Stop the loop
         _G.loop1 = false
      end
		print(swingevent)
	end)
tgls:Toggle("Dungeon Chaos",false, function(Chaos)
      if Chaos then
         -- Start the loop
         _G.Chaos1 = true
	while _G.Chaos1 do
task.wait(1)
local args = {"Chaos"}
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("Dungeon"):WaitForChild("OnJoinDungeon"):FireServer(unpack(args))
end
      else
         -- Stop the loop
         _G.Chaos1 = false
      end
		print(Chaos)
	end)
tgls:Toggle("Leave Dungeon Chaos",false, function(Leave)
      if Leave then
         -- Start the loop
         _G.Leave1 = true
			while _G.Leave1 do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("Dungeon"):WaitForChild("OnLeaveDungeon"):FireServer()
				wait(25) -- Adjust the wait time as needed
			end
      else
         -- Stop the loop
         _G.Leave1 = false
      end
		print(Leave)
	end)	
tgls:Toggle("Fly",false, function()
game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = 12				
-- Adjust the wait time as needed
end)

tgls:Toggle("UnFly",false, function()
game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = 1				
-- Adjust the wait time as needed

end)
